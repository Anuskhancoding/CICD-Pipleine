name: CD Pipeline

on:
  workflow_run:
    workflows: ["CI Pipeline"]
    types:
      - completed

jobs:
  deploy:
    runs-on: self-hosted
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: website-files
        github-token: ${{ secrets.GITHUB_TOKEN }}
        run-id: ${{ github.event.workflow_run.id }}
    
    - name: Extract files
      run: |
        echo "Extracting files..."
        mkdir -p /home/hp/website
        unzip -o website.zip -d /home/hp/website/
        echo "Files extracted to /home/hp/website/!"
        ls -la /home/hp/website/
    
    - name: Create systemd service file
      run: |
        echo "Creating systemd service..."
        sudo tee /etc/systemd/system/webserver.service << EOF
        [Unit]
        Description=Simple HTTP Server for CI/CD
        After=network.target
        
        [Service]
        Type=simple
        User=hp
        WorkingDirectory=/home/hp/website
        ExecStart=/usr/bin/python3 -m http.server 3000 --bind 0.0.0.0
        Restart=always
        RestartSec=3
        
        [Install]
        WantedBy=multi-user.target
        EOF
        echo "Service file created"
    
    - name: Stop and start webserver service
      run: |
        echo "Managing webserver service..."
        # Stop existing service if running
        sudo systemctl stop webserver || echo "Service not running"
        # Reload systemd to pick up any changes
        sudo systemctl daemon-reload
        # Start the service
        sudo systemctl start webserver
        # Enable it to start on boot
        sudo systemctl enable webserver
        echo "Webserver service started"
        
    - name: Verify server is accessible
      run: |
        echo "Testing server accessibility..."
        sleep 3
        # Check service status
        if sudo systemctl is-active --quiet webserver; then
          echo "✅ Webserver service is active"
        else
          echo "❌ Webserver service failed to start"
          sudo systemctl status webserver
          exit 1
        fi
        
        # Test if server responds
        if curl -s http://localhost:3000 | grep -q "Hello World"; then
          echo "✅ Server responds on localhost:3000"
        else
          echo "❌ Server not responding on localhost"
          exit 1
        fi
        
        if curl -s http://192.168.100.143:3000 | grep -q "Hello World"; then
          echo "✅ Website is live at http://192.168.100.143:3000"
        else
          echo "❌ Server not responding externally"
          exit 1
        fi
        
        echo "🚀 Deployment complete! Website running as systemd service."
        echo "📱 Access your website at: http://192.168.100.143:3000"
        echo "🔧 To check status: sudo systemctl status webserver"
        echo "🔧 To stop: sudo systemctl stop webserver"
