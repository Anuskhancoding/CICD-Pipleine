name: CD Pipeline

on:
  workflow_run:
    workflows: ["CI Pipeline"]
    types:
      - completed

jobs:
  deploy:
    runs-on: self-hosted
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: website-files
        github-token: ${{ secrets.GITHUB_TOKEN }}
        run-id: ${{ github.event.workflow_run.id }}
    
    - name: Extract files
      run: |
        echo "Extracting files..."
        mkdir -p /home/hp/website
        unzip -o website.zip -d /home/hp/website/
        echo "Files extracted to /home/hp/website/!"
        ls -la /home/hp/website/
    
    - name: Stop existing server
      run: |
        echo "Stopping any existing server on port 3000..."
        pkill -f "python3.*3000" || echo "No existing server found"
        sleep 2
    
    - name: Start web server
      run: |
        echo "Starting web server on port 3000..."
        cd /home/hp/website
        nohup python3 -m http.server 3000 --bind 0.0.0.0 > server.log 2>&1 &
        echo $! > server.pid
        sleep 3
        echo "Server started with PID: $(cat server.pid)"
        
    - name: Verify deployment
      run: |
        echo "Checking if server is running..."
        sleep 2
        if curl -s http://192.168.100.143:3000 > /dev/null; then
          echo "✅ Website is live at http://192.168.100.143:3000"
          echo "✅ Server is running in background"
        else
          echo "❌ Server not responding"
          echo "Checking server process..."
          ps aux | grep "python3.*3000" | grep -v grep || echo "No server process found"
        fi
