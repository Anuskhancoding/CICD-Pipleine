name: CD Pipeline

on:
  workflow_run:
    workflows: ["CI Pipeline"]
    types:
      - completed

jobs:
  deploy:
    runs-on: self-hosted
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: website-files
        github-token: ${{ secrets.GITHUB_TOKEN }}
        run-id: ${{ github.event.workflow_run.id }}
    
    - name: Extract files
      run: |
        echo "Extracting files..."
        mkdir -p /home/hp/website
        unzip -o website.zip -d /home/hp/website/
        echo "Files extracted to /home/hp/website/!"
        ls -la /home/hp/website/
    
    - name: Stop existing server
      run: |
        echo "Stopping any existing server on port 3000..."
        pkill -f "python3.*3000" || echo "No existing server found"
        sleep 2
    
    - name: Start web server
      run: |
        echo "Starting web server on port 3000..."
        cd /home/hp/website
        # Kill any existing server first
        pkill -f "python3.*http.server.*3000" || true
        # Start server with nohup to keep it running
        nohup python3 -m http.server 3000 --bind 0.0.0.0 </dev/null >/dev/null 2>&1 &
        # Save the PID
        echo $! > /home/hp/website/server.pid
        sleep 5
        echo "Server started with PID: $(cat /home/hp/website/server.pid)"
        
    - name: Verify server is accessible
      run: |
        echo "Testing server accessibility..."
        sleep 3
        # Test local connection
        if curl -s http://localhost:3000 | grep -q "Hello World"; then
          echo "✅ Server responds on localhost"
        else
          echo "❌ Server not responding on localhost"
        fi
        
        # Test external connection  
        if curl -s http://192.168.100.143:3000 | grep -q "Hello World"; then
          echo "✅ Server responds externally on 192.168.100.143:3000"
        else
          echo "❌ Server not responding externally"
        fi
        
        # Show process info
        echo "Server processes:"
        ps aux | grep "python3.*http.server" | grep -v grep || echo "No server process found"
        
        # Show port usage
        echo "Port 3000 usage:"
        sudo netstat -tlnp | grep :3000 || echo "Port 3000 not in use"
