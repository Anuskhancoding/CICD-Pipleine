name: CD Pipeline

on:
  workflow_run:
    workflows: ["CI Pipeline"]
    types:
      - completed

jobs:
  deploy:
    runs-on: self-hosted
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: website-files
        github-token: ${{ secrets.GITHUB_TOKEN }}
        run-id: ${{ github.event.workflow_run.id }}
    
    - name: Extract files
      run: |
        echo "Extracting files..."
        mkdir -p /home/hp/website
        unzip -o website.zip -d /home/hp/website/
        echo "Files extracted to /home/hp/website/!"
        ls -la /home/hp/website/
    
    - name: Stop existing server
      run: |
        echo "Stopping any existing server on port 3000..."
        pkill -f "python3.*http.server.*3000" || echo "No existing server found"
        
    - name: Create start script
      run: |
        echo "Creating startup script..."
        cat > /home/hp/website/start_server.sh << 'EOF'
#!/bin/bash
cd /home/hp/website
exec python3 -m http.server 3000 --bind 0.0.0.0
EOF
        chmod +x /home/hp/website/start_server.sh
        echo "Startup script created"
        
    - name: Start web server with setsid
      run: |
        echo "Starting web server on port 3000..."
        cd /home/hp/website
        # Use setsid to create new session that survives parent death
        setsid python3 -m http.server 3000 --bind 0.0.0.0 </dev/null >/home/hp/website/server.log 2>&1 &
        sleep 3
        echo "Server started with setsid"
        
    - name: Verify server is accessible
      run: |
        echo "Testing server accessibility..."
        sleep 2
        
        # Test if server responds
        if curl -s http://localhost:3000 | grep -q "Hello World"; then
          echo "Server responds on localhost:3000"
        else
          echo "Server not responding on localhost"
          exit 1
        fi
        
        if curl -s http://192.168.100.143:3000 | grep -q "Hello World"; then
          echo "Website is live at http://192.168.100.143:3000"
        else
          echo "Server not responding externally"
          exit 1
        fi
        
        echo "Deployment complete! Website running with setsid."
        echo "Access your website at: http://192.168.100.143:3000"
